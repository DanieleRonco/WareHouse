<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>